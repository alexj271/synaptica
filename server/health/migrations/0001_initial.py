# Generated by Django 5.2.5 on 2025-08-29 13:45

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Recommendation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now, help_text='Date when recommendation was generated')),
                ('title', models.CharField(help_text='Short title for the recommendation', max_length=255)),
                ('content', models.TextField(help_text='Detailed recommendation content')),
                ('type', models.CharField(choices=[('exercise', 'Exercise'), ('nutrition', 'Nutrition'), ('sleep', 'Sleep'), ('mindfulness', 'Mindfulness'), ('general', 'General Health')], default='general', help_text='Type of recommendation', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', help_text='Priority level of the recommendation', max_length=10)),
                ('confidence_score', models.DecimalField(blank=True, decimal_places=2, help_text='AI confidence score (0.0 to 1.0)', max_digits=3, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('model_version', models.CharField(blank=True, help_text='Version of the AI model used', max_length=50, null=True)),
                ('is_read', models.BooleanField(default=False, help_text='Has user read this recommendation')),
                ('is_completed', models.BooleanField(default=False, help_text='Has user completed this recommendation')),
                ('user_rating', models.PositiveIntegerField(blank=True, help_text='User rating (1-5 stars)', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('expires_at', models.DateTimeField(blank=True, help_text='When this recommendation expires', null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recommendations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Recommendation',
                'verbose_name_plural': 'Recommendations',
                'db_table': 'recommendations',
                'ordering': ['-created_at', '-priority'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="User's full name", max_length=255)),
                ('email', models.EmailField(help_text="User's email address", max_length=254, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('age', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(150)])),
                ('timezone', models.CharField(default='UTC', help_text="User's timezone", max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Profile',
                'verbose_name_plural': 'User Profiles',
                'db_table': 'user_profiles',
            },
        ),
        migrations.CreateModel(
            name='HealthData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(help_text='Date of the health data')),
                ('steps', models.PositiveIntegerField(default=0, help_text='Daily step count', validators=[django.core.validators.MaxValueValidator(100000)])),
                ('sleep_hours', models.DecimalField(decimal_places=2, default=0.0, help_text='Hours of sleep', max_digits=4, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(24)])),
                ('heart_rate_avg', models.PositiveIntegerField(blank=True, help_text='Average heart rate in BPM', null=True, validators=[django.core.validators.MinValueValidator(30), django.core.validators.MaxValueValidator(220)])),
                ('activity_level', models.CharField(choices=[('sedentary', 'Sedentary'), ('light', 'Light'), ('moderate', 'Moderate'), ('vigorous', 'Vigorous'), ('very_active', 'Very Active')], default='moderate', help_text='Overall activity level for the day', max_length=20)),
                ('calories_burned', models.PositiveIntegerField(blank=True, help_text='Calories burned', null=True, validators=[django.core.validators.MaxValueValidator(10000)])),
                ('weight', models.DecimalField(blank=True, decimal_places=2, help_text='Weight in kg', max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='health_data', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Health Data',
                'verbose_name_plural': 'Health Data',
                'db_table': 'health_data',
                'ordering': ['-date', '-created_at'],
                'unique_together': {('user', 'date')},
            },
        ),
    ]
